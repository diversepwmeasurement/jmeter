concurrency:
  cancel-in-progress: true
  group: ${{ (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release'
    ) && format('ci-main-{0}', github.sha) || format('ci-main-{0}', github.ref) }}
jobs:
  errorprone:
    name: Error Prone (JDK 17)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel --no-daemon -PenableErrorprone classes
        job-id: errprone
        multi-cache-enabled: false
  matrix_prep:
    env:
      MATRIX_JOBS: 4
    name: Matrix Preparation
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: set-matrix
      run: 'node .github/workflows/matrix.js

        '
  test:
    env:
      TZ: ${{ matrix.tz }}
    name: ${{ matrix.name }}
    needs: matrix_prep
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 50
    - continue-on-error: true
      if: ${{ matrix.oracle_java_website != '' }}
      name: Set up Java ${{ matrix.java_version }}, oracle
      uses: oracle-actions/setup-java@7a0114d66dbd02646abd345c3395b34c148e6126
      with:
        release: ${{ matrix.java_version }}
        website: ${{ matrix.oracle_java_website }}
    - continue-on-error: true
      name: Set up Java 17 and ${{ matrix.non_ea_java_version }}, ${{ matrix.java_distribution
        }}
      uses: actions/setup-java@v4
      with:
        architecture: x64
        distribution: ${{ matrix.java_distribution }}
        java-version: '${{ matrix.non_ea_java_version }}

          17

          '
    - continue-on-error: true
      name: Steps to reproduce
      uses: actions/github-script@v7
      with:
        script: 'console.log(''The following command might help reproducing CI results,
          use Java ${{ matrix.java_version }}'')

          console.log(''TZ="${{ matrix.tz }}" _JAVA_OPTIONS="${{ matrix.extraJvmArgs
          }}" ./gradlew build -x distTar -x distTarSource -x distTarSha512 -x distTarSourceSha512
          ${{ matrix.extraGradleArgs }} -PtestExtraJvmArgs="${{ matrix.testExtraJvmArgs
          }}" -PtestDisableCaching="${{ matrix.testDisableCaching }}"'')

          '
    - continue-on-error: true
      env:
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}
        _JAVA_OPTIONS: ${{ matrix.extraJvmArgs }}
      name: Test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan --no-parallel build -x distTar -x distTarSource -x distTarSha512
          -x distTarSourceSha512 ${{ matrix.extraGradleArgs }}
        job-id: jdk${{ matrix.java_version }}
        multi-cache-enabled: false
        properties: 'testExtraJvmArgs=${{ matrix.testExtraJvmArgs }}

          testDisableCaching=${{ matrix.testDisableCaching }}

          jdkBuildVersion=17

          jdkTestVersion=${{ matrix.java_version }}

          jdkTestVendor=${{ matrix.java_vendor }}

          # We provision JDKs with GitHub Actions for caching purposes, so Gradle
          should rather fail in case JDK is not found

          org.gradle.java.installations.auto-download=false

          '
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix_prep.outputs.matrix)}}
name: CI
on:
  repository_dispatch:
    types: trigger-ga___main.yml
